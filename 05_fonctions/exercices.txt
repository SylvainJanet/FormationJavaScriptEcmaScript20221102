1) Ecrire une fonction qui renvoie le résultat de la multiplication de deux nombres

2) Ecrire une fonction qui affiche la table de multiplication d'un nombre ou le premier 
et le dernier multiples sont paramétrés
tableMultiplication(7,3,5) renvoie
7 * 3 = 21
7 * 4 = 28
7 * 5 = 35

3) Recoder le jeu où l'on devine un nombre choisi 
aléatoirement par le programme. 
(boucles ex 4)
Cette fois ci, le programme va demander à l'utilisateur
quelles bornes utiliser et lorsqu'il aura deviné un 
nombre incorrect, il lui proposera les choix cohérents
Exemple : je choisi 1 et 100 comme bornes. Le programme
me demande de saisir un nombre entre 1 et 100. Je choisi
50. Le programme me répond : le nombre est plus grand, 
choisi un nombre entre 51 et 100. Lorsque j'ai trouvé, 
le programme s'arrête.
On va cette fois ci utiliser des fonctions.
- coder deciderBornes() qui renvoie les bornes 
utilisées pour le jeu
- coder jouerUnCoup(nombre,minimum,maximum) qui 
demande à l'utilisateur un entier entre minimum et 
maximum, et qui renvoie :
	* un boolean à vrai uniquement si l'utilisateur a 
    gagné (il a choisi le paramètre nombre)
	* le minimum pour le coup suivant
	* le maximum pour le coup suivant
- coder jouerUnePartie(nombre,minimum,maximum) qui 
fait une partie du jeu où l'entier à deviner est le 
paramètre nombre, et où les bornes sont minimum et 
maximum et qui renvoie le nombre de tentatives du 
joueur
- coder une fonction jouer() (ou une IIFE) qui fait tout le jeu : 
demander à l'utilisateur les bornes du jeu, puis choisi
un nombre aléatoirement, puis demande à l'utilisateur 
de deviner un nombre, en lui disant si le nombre est 
plus grand ou plus petit, et en lui proposant au fur et 
à mesure des choix cohérents avec ces indications. 
Lorsque le joueur trouve le nombre, la fonction le 
félicite, lui donne son nombre de tentatives et 
s'arrête.
Math.floor(Math.random() * (max-min+1) + min);
En plus : 
- Rajouter un nombre maximal de tentatives, demandé à l'utilisateur
avant de lancer la partie
- Faire du contrôle sur le prompt : bien des nombres, bien compris entre
les bornes

4) Faire une fonction qui permet de faire des fermetures qui ajoutent une chaîne
de caractères entre deux chaînes de caractères.

Objectif : coder insererDansTexte pour que le code suivant fonctionne :
let messageAcceuil = insererDansTexte("Bonjour "," et bienvenue !")
let messageAuRevoir = insererDansTexte("Au revoir ", " il est bien triste que tu t'en ailles !")

messageAccueil("Truc")
-> Bonjour Truc et bienvenue !
messageAuRevoir("Truc")
-> Au revoir Truc il est bien triste que tu t'en ailles !